"use client";

import React, { useState, useEffect } from "react";
import ProgressBar from "@/app/ui/progressBar";
import Button from "@/app/ui/button";

import { fetchSurveyQuestions } from "@/app/lib/data";

const Survey = () => {
  //const data = fetchSurveyQuestions();
  //const data = await fetch(`https://nextjs-physics-survey-service-ed3eab6bd412.herokuapp.com/survey_questions`)
  //let questions = await data.json();

  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [loading, setLoading] = useState(true); // State to manage loading status
  const [questions, setQuestions] = useState([]); //state to hold the survey questions

  const handleNext = () => {
    if (currentQuestion < questions.length - 1) {
      setCurrentQuestion(currentQuestion + 1);
    }
  };

  const handleKeyDown = (e) => {
    console.log(e.target.value);
    // Add any additional handling logic
  };

  useEffect(() => {
    console.log("useEffect running");
    const fetchQuestions = async () => {
      try {
        const data = await fetchSurveyQuestions();
        console.log("Fetched questions:", data);
        setQuestions(data);
      } catch (error) {
        console.error("Error fetching survey questions:", error);
      } finally {
        setLoading(false);
      }
    };

    fetchQuestions();
  }, []);

  const progress = (currentQuestion / (questions.length - 1)) * 100;

  if (loading) {
    return <div>Loading survey questions</div>;
  }

  return (
    <div>
      <p>Welcome!</p>
      <div>
        {questions.length === 0 ? (
          <p>No Questions Available</p>
        ) : (
          <div>
            <ul>
              {/* Show current question */}
              <p>{questions[currentQuestion].question_text}</p>

              <textarea
                className="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 whitespace-pre-wrap text-justify leading-9 "
                name="surveyAnswer"
                id={`question_${questions[currentQuestion].id}`}
                rows={3}
                onKeyDown={handleKeyDown}
                placeholder="Write your thoughts here..."
                required
              />
            </ul>
          </div>
        )}
      </div>

      {/* Show progress */}
      <ProgressBar progress={progress} />

      {/* Next button */}
      <Button
        onClick={handleNext}
        disabled={currentQuestion === questions.length - 1}
      >
        Next
      </Button>
    </div>
  );
};

export default Survey;
